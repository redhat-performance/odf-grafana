---
- name: Set dashboard name
  set_fact:
    dashboard_name: "{{ item | basename | splitext | first }}"

# the dashboard_content is wrapped by '' to prevent the content
# being parsed has json which would result in the jinja2 template
# dealing with a dict.
- name: Load dashboard definition
  set_fact: 
    dashboard_content: "'{{ lookup('file', item) | replace('${datasource}', hostvars['localhost']['prometheus_datasource_uid'])}}'"
  when: not deploy_local

- name: Define dashboard to Grafana
  command:
    cmd: oc -n {{ grafana_namespace }} apply -f - 
    stdin: "{{ lookup('template', 'dashboard.j2') }}"
  when: not deploy_local

- name: Define Dashboard to Local Grafana
  ansible.builtin.uri:
    url: "{{ grafana_route }}/api/dashboards/db"
    user: "{{ grafana_user }}"
    password: "{{ grafana_password }}"
    method: POST
    validate_certs: no
    force_basic_auth: yes
    body_format: json
    body: >
      {
        "dashboard": {{ lookup('file', item) }},
        "folderId": 0,
        "overwrite": true
      } 
  when: deploy_local